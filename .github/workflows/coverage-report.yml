name: Build, Test and Deploy Coverage Report

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'

    - name: Install ReportGenerator
      run: dotnet tool install -g dotnet-reportgenerator-globaltool

    - name: Install dependencies
      run: dotnet restore

    - name: Run tests and collect coverage
      run: |
        dotnet test --settings tests.runsettings

    - name: Find latest coverage report
      id: find-coverage
      run: |
        # Find the latest coverage report file path
        COVERAGE_FILE=$(find $(pwd)/ChatSupport.Tests/TestResults -name "coverage.cobertura.xml" | sort | tail -n 1)
        echo "Coverage report path: $COVERAGE_FILE"
        echo "coverage-file=$COVERAGE_FILE" >> $GITHUB_ENV

    - name: Generate coverage report
      run: |
        reportgenerator -reports:${{ env.coverage-file }} -targetdir:coverage -reporttypes:Html

    - name: Generate coverage badge
      run: |
        reportgenerator -reports:${{ env.coverage-file }} -targetdir:coverage -reporttypes:TextSummary
        COVERAGE_PERCENTAGE=$(grep "Line coverage:" coverage/Summary.txt | sed -E 's/.*Line coverage: ([0-9.]+%).*/\1/')
        echo "Coverage: ${COVERAGE_PERCENTAGE}%"
        echo "<?xml version='1.0' encoding='UTF-8'?><svg xmlns='http://www.w3.org/2000/svg' width='99' height='20'><linearGradient id='b' x2='0' y2='100%'><stop offset='0' stop-color='#bbb' stop-opacity='.1'/><stop offset='1' stop-opacity='.1'/></linearGradient><mask id='a'><rect width='99' height='20' rx='3' fill='#fff'/></mask><g mask='url(#a)'><path fill='#555' d='M0 0h63v20H0z'/><path fill='#dfb317' d='M63 0h36v20H63z'/><path fill='url(#b)' d='M0 0h99v20H0z'/></g><g fill='#fff' text-anchor='middle' font-family='DejaVu Sans,Verdana,Geneva,sans-serif' font-size='11'><text x='31.5' y='15' fill='#010101' fill-opacity='.3'>coverage</text><text x='31.5' y='14'>coverage</text><text x='80' y='15' fill='#010101' fill-opacity='.3'>${COVERAGE_PERCENTAGE}</text><text x='80' y='14'>${COVERAGE_PERCENTAGE}</text></g></svg>" > coverage/coverage.svg

    - name: Setup Pages
      if: github.ref == 'refs/heads/master'
      uses: actions/configure-pages@v3

    - name: Upload Artifact
      if: github.ref == 'refs/heads/master'
      uses: actions/upload-pages-artifact@v1
      with:
        path: "./coverage"
        
  deploy:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: build
    
    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
